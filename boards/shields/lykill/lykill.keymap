/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";

            // ------------------------------------------------------------------------------------------------------------------
            //|         ESC |F1   | F2  |  F3  |  F4  |  F5  |
            //| SqBr|   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            //| SqBr|  <    |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            //| Br  |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            //| Br  | SHIFT |  Z  |  X  |  C   |  V   |  B   |    |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESC    &kp N1    &kp N2    &kp N3    &kp N4     &kp N5                              &kp N6     &kp N7     &kp N8     &kp N9    &kp N0    &kp DELETE  
&kp PIPE   &kp Q     &kp W     &kp E     &kp R      &kp T                               &kp Y      &kp U      &kp I      &kp O     &kp P     &kp BSPC    
&kp TAB    &kp A     &kp S     &kp D     &kp F      &kp G                               &kp H      &kp J      &kp K      &kp L     &kp SEMI  &kp SQT     
&kp LSHFT  &kp Z     &kp X     &kp C     &kp V      &kp B                               &kp N      &kp M      &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT   
           &kp AMPS   &kp LALT  &kp LCTRL &kp INS   &kp RET  &kp RET         &kp SPACE  &kp SPACE &kp DELETE  &kp RCTRL &kp RALT  &kp RALT
            >;
        };

    };
};